#!/bin/bash

function get_op_number () {
  local NUM_FILE="$LOG_DIR/RUNS"
  if [ -f $NUM_FILE ]; then
    if [ -r $NUM_FILE ]; then
      read NUM < $NUM_FILE;
    else
      echo "Unable to read $NUM_FILE.";
      exit 1;
    fi

    # Increment from the last run.
    local NUM=$(($NUM + 1))
  else
    # Default to assuming this is the first run.
    local NUM=1
  fi

  # Write the current run number back.
  if ! [ -w $NUM_FILE ]; then
    echo "Unable to write to $NUM_FILE.";
    exit 1;
  else
    echo $NUM > $NUM_FILE;
  fi

  printf "%02d" $NUM
}

function init_vars () {
  CONFIG_DIR=${1:?Missing log dir.}
  DOT_ENV="$CONFIG_DIR/.env"
  if [ -f $DOT_ENV ] ; then
    if [ -r $DOT_ENV ] ; then
      . $DOT_ENV
    else
      echo ".env file ($DOT_ENV) exists but is not readable."
      exit 1;
    fi
  fi

  declare -g DRUPAL_ROOT=${DRUPAL_ROOT:-/opt/www/drupal}
  declare -g DRUPAL_USER=${DRUPAL_USER:-1}
  declare -g DRUSH=${DRUSH:-"$DRUPAL_ROOT/vendor/bin/drush"}
  declare -g MIGRATION_GROUP=${MIGRATION_GROUP:-foxml_to_dgis}
  declare -g WEB_USER=${WEB_USER:-"www-data"}
  declare -g URI=${URI:?Missing URI}
  declare -g TIME=${TIME:-/usr/bin/time}
  declare -g LOG_DIR=${LOG_DIR:-$CONFIG_DIR}

  # Initialize the log directory.
  if ! [ -d "$LOG_DIR" ]; then
    mkdir -p "$LOG_DIR"
    sudo chown -R "$WEB_USER:$WEB_USER" "$LOG_DIR"
  elif ! ( sudo -u $WEB_USER -- test -d "$LOG_DIR" && sudo -u $WEB_USER -- test -w "$LOG_DIR" ); then
    echo "$USER must be able to write (logs) to the log directory ($LOG_DIR)."
    exit 1;
  fi
}
