---
id: dspace_stub_terms_corporate_body
label: Create stub corporate/organization terms.
migration_group: dspace_to_dgis
source:
  plugin: embedded_data
  data_rows: []
  ids:
    auth_source:
      type: string
    auth_value_uri:
      type: string
    untyped_name:
      type: string
    date_name_part:
      type: string
    display_form:
      type: string
  dsf_misc:
    type: &type entity:taxonomy_term
    bundle: &bundle corporate_body
    case_insensitive: &case_insensitive true
    lookup_defaults: &lookup_defaults
      plugin: dgi_migrate.process.entity_query
      entity_type: *type
destination:
  plugin: *type
  default_bundle: *bundle
  # XXX: We're not really dealing with translations here. To do so, seems like
  # you would need separate migrations.
  #translations: true
  validate: &validate false
  overwrite_properties: []
process:
  name:
    - plugin: dgi_migrate.process.dc_name
      map:
        untyped: untyped_name
        date: date_name_part
        display_form: display_form
  field_authority_link/source:
    - plugin: skip_on_empty
      source: auth_value_uri
      method: process
    - plugin: default_value
      source: auth_source
      default_value: other
  field_authority_link/uri:
    - plugin: skip_on_empty
      source: auth_value_uri
      method: process
  _tid_auth:
    - << : *lookup_defaults
      static_conditions:
        - [vid, *bundle]
      conditions:
        - [field_authority_link.source, auth_source]
        - [field_authority_link.uri, auth_value_uri]
  _tid_dc_name:
    - << : *lookup_defaults
      static_conditions:
        - [vid, *bundle]
      conditions:
        - [name, '@name']
      empty:
        - field_authority_link.source
        - field_authority_link.uri
  tid:
    - plugin: get
      source:
        - '@_tid_auth'
        - '@_tid_dc_name'
    - plugin: flatten
    - plugin: null_coalesce
    - plugin: skip_on_empty
      method: process
dependencies:
  enforced:
    module:
      - dgi_migrate
      - dgi_migrate_foxml_standard_mods
